import type { Metadata } from "next";
import { Inter as FontSans } from "next/font/google"

import '../styles/globals.css';
import { getKindeServerSession } from "@kinde-oss/kinde-auth-nextjs/server";

import { cn } from "@/lib/utils"


import { ThemeProvider } from "@/components/theme-provider"

import { Navbar } from "@/components/Header"
import { unstable_noStore as noStore } from "next/cache";
import prisma from "@/lib/db";


const fontSans = FontSans({
  subsets: ["latin"],
  variable: "--font-sans",
})

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};


async function getData(userId: string) {
  noStore();
  if (userId) {
    const data = await prisma.user.findUnique({
      where: {
        id: userId,
      },
      select: {
        colorScheme: true,
      },
    });
    return data;
  }
}

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {

  const { getUser } = getKindeServerSession();
  const user = await getUser();
  const data = await getData(user?.id as string);
  return (
    <html lang="en" suppressHydrationWarning>
      <body className={cn("min-h-screen bg-background font-sans antialiased", fontSans.variable, data?.colorScheme??"theme-orange" )}>

      <ThemeProvider
            attribute="class"
            defaultTheme="system"
            enableSystem
            disableTransitionOnChange
          >  
            <Navbar></Navbar>
            {children}
          </ThemeProvider>
      </body>
    </html>
  );
}
